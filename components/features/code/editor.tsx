"use client"

import { useState } from "react"
import { Card } from "@/components/ui/card"
import { Button } from "@/components/ui/button"
import { Tabs, TabsContent, TabsList, TabsTrigger } from "@/components/ui/tabs"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Play, Save, Download, Upload, Sparkles, Code, FileCode, Settings } from "lucide-react"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"

export default function CodeEditor() {
  const [fileName, setFileName] = useState("main.js")
  const [code, setCode] = useState("// Start coding here\nconsole.log('Hello, TaskGrove AI!');")
  const [aiPrompt, setAiPrompt] = useState("")
  const [language, setLanguage] = useState("javascript")

  const handleAIGenerate = () => {
    if (!aiPrompt.trim()) return

    // Simulate AI response
    setTimeout(() => {
      setCode(
        `// Generated by TaskGrove AI based on: "${aiPrompt}"\n\n` +
          `function greet(name) {\n` +
          `  return \`Hello, \${name}! Welcome to TaskGrove AI.\`;\n` +
          `}\n\n` +
          `// Example usage\n` +
          `const message = greet('User');\n` +
          `console.log(message);\n\n` +
          `// You can modify this code or ask for more specific implementations`,
      )
      setAiPrompt("")
    }, 1000)
  }

  return (
    <div className="grid grid-cols-1 lg:grid-cols-4 gap-6">
      <div className="lg:col-span-3">
        <Card className="glassmorphism p-6">
          <div className="flex items-center justify-between mb-4">
            <div className="flex items-center">
              <Input value={fileName} onChange={(e) => setFileName(e.target.value)} className="w-48 bg-gray-800" />
              <Select value={language} onValueChange={setLanguage}>
                <SelectTrigger className="w-40 ml-2 bg-gray-800">
                  <SelectValue placeholder="Language" />
                </SelectTrigger>
                <SelectContent>
                  <SelectItem value="javascript">JavaScript</SelectItem>
                  <SelectItem value="typescript">TypeScript</SelectItem>
                  <SelectItem value="python">Python</SelectItem>
                  <SelectItem value="java">Java</SelectItem>
                  <SelectItem value="csharp">C#</SelectItem>
                </SelectContent>
              </Select>
            </div>
            <div className="flex space-x-2">
              <Button variant="outline" size="sm">
                <Upload className="h-4 w-4 mr-2" />
                Import
              </Button>
              <Button variant="outline" size="sm">
                <Download className="h-4 w-4 mr-2" />
                Export
              </Button>
              <Button variant="outline" size="sm">
                <Save className="h-4 w-4 mr-2" />
                Save
              </Button>
              <Button size="sm">
                <Play className="h-4 w-4 mr-2" />
                Run
              </Button>
            </div>
          </div>

          <div className="relative">
            <Textarea
              value={code}
              onChange={(e) => setCode(e.target.value)}
              className="min-h-[500px] font-mono text-sm bg-gray-900 p-4 resize-none"
            />
            <div className="absolute top-0 right-0 p-2">
              <Button variant="ghost" size="sm" className="h-6 px-2 text-xs">
                <Settings className="h-3 w-3 mr-1" />
                Editor Settings
              </Button>
            </div>
          </div>
        </Card>
      </div>

      <div className="lg:col-span-1">
        <Card className="glassmorphism">
          <Tabs defaultValue="ai">
            <TabsList className="grid w-full grid-cols-2">
              <TabsTrigger value="ai">AI Assistant</TabsTrigger>
              <TabsTrigger value="files">Files</TabsTrigger>
            </TabsList>
            <TabsContent value="ai" className="p-4">
              <div className="space-y-4">
                <div>
                  <h3 className="text-sm font-medium mb-2">AI Coding Assistant</h3>
                  <p className="text-xs text-gray-400 mb-4">
                    Describe what you want to code and let AI help you generate it.
                  </p>

                  <Textarea
                    value={aiPrompt}
                    onChange={(e) => setAiPrompt(e.target.value)}
                    placeholder="E.g., Create a function that calculates the factorial of a number..."
                    className="min-h-[100px] bg-gray-800"
                  />

                  <Button className="w-full mt-2" onClick={handleAIGenerate} disabled={!aiPrompt.trim()}>
                    <Sparkles className="h-4 w-4 mr-2" />
                    Generate Code
                  </Button>
                </div>

                <div className="border-t border-gray-800 pt-4">
                  <h3 className="text-sm font-medium mb-2">Quick Actions</h3>
                  <div className="space-y-2">
                    <Button
                      variant="outline"
                      size="sm"
                      className="w-full justify-start"
                      onClick={() => setAiPrompt("Explain this code")}
                    >
                      Explain this code
                    </Button>
                    <Button
                      variant="outline"
                      size="sm"
                      className="w-full justify-start"
                      onClick={() => setAiPrompt("Optimize for performance")}
                    >
                      Optimize for performance
                    </Button>
                    <Button
                      variant="outline"
                      size="sm"
                      className="w-full justify-start"
                      onClick={() => setAiPrompt("Add error handling")}
                    >
                      Add error handling
                    </Button>
                  </div>
                </div>
              </div>
            </TabsContent>
            <TabsContent value="files" className="p-4">
              <div className="space-y-4">
                <h3 className="text-sm font-medium mb-2">Project Files</h3>
                <div className="space-y-2">
                  {[
                    { name: "main.js", icon: FileCode },
                    { name: "utils.js", icon: FileCode },
                    { name: "index.html", icon: Code },
                  ].map((file) => (
                    <div key={file.name} className="flex items-center p-2 rounded-md hover:bg-gray-800">
                      <file.icon className="h-4 w-4 mr-2 text-gray-400" />
                      <span className="text-sm">{file.name}</span>
                    </div>
                  ))}
                </div>
              </div>
            </TabsContent>
          </Tabs>
        </Card>
      </div>
    </div>
  )
}
